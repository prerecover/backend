# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminStats {
  approovedAppointments: Int!
  inProcessAppointments: Int!
  inProcessSurveys: Int!
  pendingAppointments: Int!
}

input AnswerInput {
  text: String!
}

type Appointment {
  _id: String!
  availableDates: [AvailableDate!]
  clinic: Clinic

  """Created at timestamp"""
  createdAt: Date!
  doctor: Doctor
  duration: Int
  file: String
  notify: Date
  online: Boolean!
  service: Service
  specialCheck: Boolean!
  status: String!
  survey: Survey
  timeStart: Date
  title: String

  """Updated at timestamp"""
  updatedAt: Date!
  user: User
}

type AppointmentStats {
  acceptedAppointments: Int!
  completedAppointments: Int!
  rejectedAppointments: Int!
  totalAppointments: Int!
}

type AvailableDate {
  _id: String!
  appointment: Appointment

  """Created at timestamp"""
  createdAt: Date!
  date: Date!

  """Updated at timestamp"""
  updatedAt: Date!
}

input AvailableDateInput {
  appointmentId: String!
  availableDates: [Date!]!
}

input AvatarUpload {
  avatar: Upload
}

type Clinic {
  _id: String!
  address: String
  age: Int
  appointments: [Appointment!]
  avatar: String
  card: String
  city: String
  country: Country

  """Created at timestamp"""
  createdAt: Date!

  """Deleted at timestamp"""
  deletedAt: Date
  description: String
  detail: ClinicDetail!
  doctors: [Doctor!]!
  email: String
  employees: Int!
  isVerfied: Boolean!
  news: [News!]!
  services: [Service!]!
  specialization: String
  title: String!
  treated: Int!
  typeTitle: String

  """Updated at timestamp"""
  updatedAt: Date!
}

type ClinicDetail {
  _id: String!
  adminFirstName: String
  adminLastName: String
  adminNumber: String
  calendar: String
  computerHave: Boolean!
  elevatorHave: Boolean!
  fridayTime: String
  internetHave: Boolean!
  language: String
  mondayTime: String
  numberOfFloors: Int!
  numbers: [String!]
  rating: Float!
  registryNumber: String
  saturdayTime: String
  site: String
  square: Float!
  sundayTime: String
  thursdayTime: String
  totalDoctors: Int!
  totalServices: Int!
  tuesdayTime: String
  wednesdayTime: String
}

input ClinicDetailInput {
  adminNumber: String!
  computerHave: Boolean!
  elevatorHave: Boolean!
  fridayTime: String
  internetHave: Boolean!
  language: String!
  mondayTime: String
  numberOfFloors: Int!
  numbers: [String!]!
  registryNumber: String!
  saturdayTime: String
  square: Int!
  sundayTime: String
  thursdayTime: String
  totalDoctors: Int!
  totalServices: Int!
  tuesdayTime: String
  wednesdayTime: String
}

type ClinicStats {
  totalClinics: Int!
  totalCreated: Int!
  totalDeleted: Int!
}

type Country {
  _id: String!
  slug: String!
  title: String!
}

input CreateAppointmentInput {
  clinicId: String!
  doctorId: String!
  duration: Int!
  online: Boolean! = true
  serviceId: String!
  timeStart: Date!
}

input CreateClinicInput {
  address: String!
  title: String!
}

input CreateDoctorInput {
  firstName: String!
  lastName: String!
  specialization: String!
  surname: String!
}

input CreateLikeInput {
  authorId: String!
  newsId: String!
}

input CreateNewsInput {
  text: String!
  title: String!
}

input CreateNotificationInput {
  text: String!
  userId: String!
}

input CreateSavedInput {
  clinicId: String
  doctorId: String
  serviceId: String
  userId: String!
}

input CreateServiceInput {
  description: String!
  doctorIds: [String!]!
  duration: Int!
  price: Float!
  title: String!
}

input CreateUserInput {
  avatar: Upload
  birthday: Date
  email: String!
  firstName: String
  lastName: String!
  login: String
  number: String

  """User's gender"""
  sex: Boolean
}

"""Date type"""
scalar Date

input DetailUserInput {
  allergy: String
  height: Int
  oxygen: Int
  pressureEnd: Int
  pressureStart: Int
  pulse: Int
  sleepTime: Int
  temperature: Int
  weight: Int
}

type Doctor {
  _id: String!
  appointments: Appointment
  avatar: String
  clinic: Clinic
  country: Country

  """Created at timestamp"""
  createdAt: Date!
  email: String
  firstName: String
  lastName: String
  mainStatus: Boolean
  number: String
  online: Boolean!
  services: [Service!]
  specialization: String
  surname: String

  """Updated at timestamp"""
  updatedAt: Date!
  workExp: Float
}

input ForgotPasswordInput {
  email: String
  number: String
}

type History {
  appointments: [Appointment!]!
  surveys: [Survey!]!
}

type Like {
  _id: String!
  author: User

  """Created at timestamp"""
  createdAt: Date!
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
}

type Link {
  _id: String!
  clinicEmail: String!

  """Created at timestamp"""
  createdAt: Date!
  expiredAt: Date!
  isUsed: Boolean!

  """Updated at timestamp"""
  updatedAt: Date!
}

input LoginInput {
  email: String
  number: String
  password: String!
}

type Mutation {
  authByOther(authByOther: OtherAuthInput!, key: String!): TokenResponse!
  authByTelegram(authByTelegram: TelegramAuthInput!): TokenResponse!
  changeDate(appointmentId: String!, timeStart: Date!): Boolean!
  changeMe(changeMeInput: UpdateUserInput!): User!
  completeSurvey(surveyCompleteInput: [SurveyCompleteInput!]!, surveyId: String!): Boolean!
  createAppointment(createAppointmentInput: CreateAppointmentInput!): Appointment!
  createClinic(createClinicInput: CreateClinicInput!): Clinic!
  createDoctor(createDoctorInput: CreateDoctorInput!): Doctor!
  createLike(createLikeInput: CreateLikeInput!): Like!
  createNews(createNewsInput: CreateNewsInput!): News!
  createNotification(createNotificationInput: CreateNotificationInput!): Notification!
  createSaved(createSavedInput: CreateSavedInput!): Saved!
  createService(createServiceInput: CreateServiceInput!): Service!
  createSurvey(surveyInput: SurveyInput!): Survey!
  createUser(countryTitle: String!, createUserInput: CreateUserInput!): User!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): Boolean!
  generateLink(clinicEmail: String): Link!
  newPassword(newPasswordInput: NewPasswordInput!): Boolean!
  registerClinic(registerClinicInput: RegisterClinicInput!): Clinic!
  registrationUser(registrationInput: RegistrationUser!): User!
  removeDoctor(id: Int!): Doctor!
  removeLike(_id: String!): Like!
  removeNews(id: Int!): News!
  removeNotification(id: Int!): Notification!
  removeSaved(_id: String!): Saved!
  removeUser(_id: String!): User!
  resendVerifyCode(email: String!): Boolean!
  selectClinics(selectClinicInput: SelectClinicInput!): [Clinic!]!
  setAsRead(notificationId: String!): Notification!
  setAvailableDates(availableDateInput: AvailableDateInput!): Boolean!
  setStatusAppointment(appointmentId: String!, status: String!): Appointment!
  signIn(signIn: LoginInput!): TokenResponse!
  updateClinic(_id: String!, updateClinicInput: UpdateClinicInput!): Clinic!
  updateDoctor(updateDoctorInput: UpdateDoctorInput!): Doctor!
  uploadAvatar(avatarUpload: AvatarUpload!): String!
  verifyCode(verifyCodeInput: VerifyCodeInput!): Boolean!
}

input NewPasswordInput {
  email: String!
  password: String!
}

type News {
  _id: String!
  clinic: Clinic

  """Created at timestamp"""
  createdAt: Date!
  like: Like
  newsImages: [NewsImage!]!
  newsVideos: [NewsVideo!]!
  text: String!
  title: String!

  """Updated at timestamp"""
  updatedAt: Date!
}

type NewsImage {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  image: String
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
}

type NewsVideo {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
  video: String
}

type Notification {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  isRead: Boolean!
  text: String!

  """Updated at timestamp"""
  updatedAt: Date!
  user: User!
}

input OtherAuthInput {
  email: String
  id: String!
  image: String
  name: String!
}

type Query {
  allAppointments(status: String): [Appointment!]!
  appointment(_id: String!): Appointment!
  appointments(skip: Int! = 0, take: Int! = 500): [Appointment!]!
  clinic(_id: String!): Clinic!
  clinics(skip: Int! = 0, take: Int! = 500): [Clinic!]!
  countries(skip: Int! = 0, take: Int! = 500): [Country!]!
  country(slug: String!): Country!
  doctor(_id: String!): Doctor!
  doctors(skip: Int! = 0, take: Int! = 500): [Doctor!]!
  doctorsByClinic(clinicId: String!): [Doctor!]!
  getMe: User!
  history: History!
  like(id: ID!): Like!
  likes(skip: Int! = 0, take: Int! = 500): [Like!]!
  news(_id: ID!): News!
  newsAll(skip: Int! = 0, take: Int! = 500): [News!]!
  newsByClinic(clinicId: String!): [News!]!
  notification(id: Int!): Notification!
  notifications(skip: Int! = 0, take: Int! = 500): [Notification!]!
  notificationsByUser: [Notification!]!
  resendForgotCode(email: String!): Boolean!
  saved(_id: String!): Saved!
  savedAll(skip: Int! = 0, take: Int! = 500): [Saved!]!
  search: Search!
  service(_id: String!): Service!
  serviceCategories(skip: Int! = 0, take: Int! = 500): [ServiceCategory!]!
  serviceCategory(slug: String!): [ServiceCategory!]!
  services(skip: Int! = 0, take: Int! = 500): [Service!]!
  servicesByClinic(clinicId: String!): [Service!]!
  stats(chunk: Int!): StatsOutput!
  surveyByAppointment(appointmentId: String!): Survey!
  surveys(skip: Int! = 0, take: Int! = 500): [Survey!]!
  surveysByUser: [Survey!]!
  user(_id: ID!): User!
  users(skip: Int! = 0, take: Int! = 500): [User!]!
  validateLink(_id: String!): Link!
}

type QuestionAnswer {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  question: SurveyQuestion
  summaryQuestion: SurveyQuestion
  text: String

  """Updated at timestamp"""
  updatedAt: Date!
}

input QuestionInput {
  answers: [AnswerInput!]!
  text: String!
}

input RegisterClinicInput {
  address: String!
  age: Int!
  avatar: Upload
  city: String!
  countryName: String!
  detail: ClinicDetailInput!
  services: [RegisterServiceInput!]!
  title: String!
  typeTitle: String!
}

input RegisterDoctorInput {
  avatar: Upload
  firstName: String!
  lastName: String!
  specialization: String!
  surname: String!
  workExp: Float!
}

input RegisterServiceInput {
  avatar: Upload
  category: String!
  description: String!
  doctors: [RegisterDoctorInput!]!
  durationMax: Int
  durationMin: Int
  offline: Boolean = false
  online: Boolean = false
  paymentMethods: [String!]!
  priceMax: Float
  priceMin: Float
  title: String!
}

input RegistrationUser {
  email: String!
  password: String!
}

type Saved {
  _id: String
  clinic: Clinic
  doctor: Doctor
  service: Service
  user: User
}

type Search {
  clinics: [Clinic!]!
  doctors: [Doctor!]!
  services: [Service!]!
}

input SelectClinicInput {
  countryTitle: String!
  offline: Boolean!
  online: Boolean!
}

type Service {
  _id: String!
  avatar: String
  clinic: Clinic!

  """Created at timestamp"""
  createdAt: Date!
  description: String!
  doctors: [Doctor!]!
  durationMax: Int
  durationMin: Int
  news: [News!]
  offline: Boolean!
  online: Boolean!
  paymentMethods: [String!]!
  priceMax: Float
  priceMin: Float
  title: String!
  treated: Int!

  """Updated at timestamp"""
  updatedAt: Date!
}

type ServiceCategory {
  _id: String!
  slug: String!
  title: String!
}

type StatsOutput {
  admin: AdminStats!
  appointments: AppointmentStats!
  clinics: ClinicStats!
  users: UsersStats!
}

type Survey {
  _id: String!
  appointment: Appointment

  """Created at timestamp"""
  createdAt: Date!
  passed: Boolean!
  questions: [SurveyQuestion!]

  """Updated at timestamp"""
  updatedAt: Date!
}

input SurveyCompleteInput {
  answerTitle: String!
  questionTitle: String!
}

input SurveyInput {
  questions: [QuestionInput!]!
  title: String
}

type SurveyQuestion {
  _id: String!
  answer: QuestionAnswer
  answers: [QuestionAnswer!]

  """Created at timestamp"""
  createdAt: Date!
  survey: Survey
  text: String

  """Updated at timestamp"""
  updatedAt: Date!
}

input TelegramAuthInput {
  auth_date: Int!
  first_name: String!
  hash: String!
  id: String!
  photo_url: String
  username: String!
}

type TokenResponse {
  access_token: String!
}

input UpdateClinicInput {
  address: String
  age: Int
  avatar: Upload
  city: String
  countryName: String
  detail: ClinicDetailInput
  services: [RegisterServiceInput!]
  title: String
  typeTitle: String
}

input UpdateDoctorInput {
  firstName: String
  id: Int!
  lastName: String
  specialization: String
  surname: String
}

input UpdateUserInput {
  address: String
  avatar: Upload
  birthday: Date
  city: String
  countryTitle: String
  detail: DetailUserInput!
  email: String
  firstName: String
  lastName: String
  login: String
  number: String

  """User's gender"""
  sex: Boolean
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: String!
  address: String
  appointments: [Appointment!]!
  avatar: String
  birthday: Date
  city: String
  country: Country

  """Created at timestamp"""
  createdAt: Date!

  """Deleted at timestamp"""
  deletedAt: Date
  detail: UserDetail
  email: String
  firstName: String
  googleId: String
  historyStudied: Boolean!
  isStaff: Boolean!
  isVerfied: Boolean!
  lastName: String
  login: String
  notifications: [Notification!]
  number: String
  online: Boolean!
  saved: Saved
  sex: Boolean
  surname: String
  telegramId: String

  """Updated at timestamp"""
  updatedAt: Date!
  userId: String
  verificationCode: Int
  vkId: String
}

type UserDetail {
  _id: String!
  allergey: String
  height: Int
  oxygen: Int
  pressureEnd: Int
  pressureStart: Int
  pulse: Int
  sleepTime: Int
  temperature: Int
  weight: Int
}

type UsersStats {
  completedSurvey: Int!
  totalCreatedUsers: Int!
  totalDeletedUsers: Float!
  totalUsers: Int!
}

input VerifyCodeInput {
  code: Int!
  email: String!
}