# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Appointment {
  _id: String!
  clinic: Clinic

  """Created at timestamp"""
  createdAt: Date!
  doctors: [Doctor!]!
  file: String
  notify: Date!
  online: Boolean!
  specialCheck: Boolean!
  status: String!
  timeEnd: Date!
  timeStart: Date!
  title: String!

  """Updated at timestamp"""
  updatedAt: Date!
  user: User
}

type Clinic {
  _id: String!
  address: String
  adminFirstName: String
  adminLastName: String
  adminNumber: String
  appointments: [Appointment!]
  avatar: String
  city: String
  country: Country

  """Created at timestamp"""
  createdAt: Date!
  description: String
  doctors: [Doctor!]!
  email: String
  employees: Int!
  endTime: Int
  isVerfied: Boolean!
  news: [News!]
  number: String
  rating: Float!
  services: [Service!]
  specialization: String
  startTime: Int
  title: String!

  """Updated at timestamp"""
  updatedAt: Date!
  workDays: String
}

type Country {
  _id: String!
  slug: String!
  title: String!
}

input CreateAppointmentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateClinicInput {
  address: String!
  title: String!
}

input CreateDoctorInput {
  firstName: String!
  lastName: String!
  specialization: String!
  surname: String!
}

input CreateLikeInput {
  authorId: String!
  newsId: String!
}

input CreateNewsInput {
  text: String!
  title: String!
}

input CreateSavedInput {
  authorId: String!
  newsId: String!
}

input CreateServiceInput {
  description: String!
  doctorIds: [String!]!
  duration: Int!
  price: Float!
  title: String!
}

input CreateUserInput {
  avatar: Upload
  birthday: Date
  email: String!
  firstName: String!
  lastName: String!
  login: String!
  password: String!

  """User's gender"""
  sex: Boolean
}

"""Date type"""
scalar Date

type Doctor {
  _id: String!
  avatar: String
  clinic: Clinic
  country: Country

  """Created at timestamp"""
  createdAt: Date!
  email: String
  firstName: String
  lastName: String
  mainStatus: Boolean!
  number: String
  online: Boolean!
  services: [Service!]
  specialization: String
  surname: String

  """Updated at timestamp"""
  updatedAt: Date!
  workExp: Float
}

input ForgotPasswordInput {
  email: String
  number: String
}

type Like {
  _id: String!
  author: User

  """Created at timestamp"""
  createdAt: Date!
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
}

input LoginInput {
  email: String
  number: String
  password: String!
}

type Mutation {
  createAppointment(createAppointmentInput: CreateAppointmentInput!): Appointment!
  createClinic(createClinicInput: CreateClinicInput!): Clinic!
  createDoctor(createDoctorInput: CreateDoctorInput!): Doctor!
  createLike(createLikeInput: CreateLikeInput!): Like!
  createNews(createNewsInput: CreateNewsInput!): News!
  createSaved(createSavedInput: CreateSavedInput!): Saved!
  createService(createServiceInput: CreateServiceInput!): Service!
  createUser(countryTitle: String!, createUserInput: CreateUserInput!): User!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): Boolean!
  newPassword(newPasswordInput: NewPasswordInput!): Boolean!
  registrationUser(registrationInput: RegistrationUser!): User!
  removeAppointment(id: Int!): Appointment!
  removeClinic(id: Int!): Clinic!
  removeDoctor(id: Int!): Doctor!
  removeLike(_id: String!): Like!
  removeNews(id: Int!): News!
  removeSaved(_id: String!): Saved!
  removeUser(_id: String!): User!
  resendVerifyCode(email: String!): Boolean!
  signIn(signIn: LoginInput!): TokenResponse!
  updateAppointment(updateAppointmentInput: UpdateAppointmentInput!): Appointment!
  updateClinic(updateClinicInput: UpdateClinicInput!): Clinic!
  updateDoctor(updateDoctorInput: UpdateDoctorInput!): Doctor!
  updateNews(updateNewsInput: UpdateNewsInput!): News!
  updateUser(countryTitle: String, updateUserInput: UpdateUserInput!): User!
  verifyCode(verifyCodeInput: VerifyCodeInput!): Boolean!
}

input NewPasswordInput {
  email: String!
  password: String!
}

type News {
  _id: String!
  clinic: Clinic

  """Created at timestamp"""
  createdAt: Date!
  like: Like
  newsImages: [NewsImage!]!
  newsVideos: [NewsVideo!]!
  saved: Saved
  text: String!
  title: String!

  """Updated at timestamp"""
  updatedAt: Date!
}

type NewsImage {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  image: String
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
}

type NewsVideo {
  _id: String!

  """Created at timestamp"""
  createdAt: Date!
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
  video: String
}

type Query {
  appointment(id: Int!): Appointment!
  appointments: [Appointment!]!
  clinic(_id: String!): Clinic!
  clinics(skip: Int! = 0, take: Int! = 25): [Clinic!]!
  countries: [Country!]!
  country(slug: String!): Country!
  doctor(_id: String!): Doctor!
  doctors(skip: Int! = 0, take: Int! = 25): [Doctor!]!
  doctorsByClinic(clinicId: String!): [Doctor!]!
  getMe: User!
  like(id: ID!): Like!
  likes(skip: Int! = 0, take: Int! = 25): [Like!]!
  news(_id: ID!): News!
  newsAll(skip: Int! = 0, take: Int! = 25): [News!]!
  resendForgotCode(email: String!): Boolean!
  saved(_id: String!): Saved!
  search: Search!
  service(_id: String!): Service!
  services(skip: Int! = 0, take: Int! = 25): [Service!]!
  servicesByClinic(clinicId: String!): [Service!]!
  user(_id: ID!): User!
  users(skip: Int! = 0, take: Int! = 25): [User!]!
}

input RegistrationUser {
  email: String!
  password: String!
}

type Saved {
  _id: String!
  author: User!

  """Created at timestamp"""
  createdAt: Date!
  news: News!

  """Updated at timestamp"""
  updatedAt: Date!
}

type Search {
  clinics: [Clinic!]!
  doctors: [Doctor!]!
  services: [Service!]!
}

type Service {
  _id: String!
  clinic: Clinic

  """Created at timestamp"""
  createdAt: Date!
  description: String!
  doctors: [Doctor!]!
  duration: Int!
  img: String
  news: [News!]!
  online: Boolean!
  price: Float!
  title: String!

  """Updated at timestamp"""
  updatedAt: Date!
}

type TokenResponse {
  access_token: String!
}

input UpdateAppointmentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateClinicInput {
  address: String
  id: Int!
  title: String
}

input UpdateDoctorInput {
  firstName: String
  id: Int!
  lastName: String
  specialization: String
  surname: String
}

input UpdateNewsInput {
  id: Int!
  text: String
  title: String
}

input UpdateUserInput {
  _id: String!
  avatar: Upload
  birthday: Date
  email: String
  firstName: String
  lastName: String
  login: String
  password: String

  """User's gender"""
  sex: Boolean
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: String!
  address: String
  appointments: [Appointment!]
  avatar: String
  birthday: Date
  country: Country

  """Created at timestamp"""
  createdAt: Date!
  email: String!
  firstName: String
  isStaff: Boolean!
  isVerfied: Boolean!
  lastName: String
  login: String
  number: String
  online: Boolean!
  sex: Boolean
  surname: String

  """Updated at timestamp"""
  updatedAt: Date!
  verificationCode: Int
}

input VerifyCodeInput {
  code: Int!
  email: String!
}